[ExcelFunction(Description = "Retrieve data based on list of computeDates, FundKey, and dataSourceName.")]
public static async Task<object> GetData(
    [ExcelArgument(Name = "computeDates", Description = "List of computation dates.")] ExcelReference computeDatesRef,
    [ExcelArgument(Name = "FundKey", Description = "Key for the fund.")] string fundKey,
    [ExcelArgument(Name = "DataSourceName", Description = "Name of the data source.")] string dataSourceName,
    [ExcelArgument(Name = "Destination", Description = "Destination cell for writing the data.")] string destination)
{
    return await ExcelAsyncUtil.Run("GetData", new object[] { computeDatesRef, fundKey, dataSourceName, destination }, async () =>
    {
        object[,] computeDatesArray = (object[,])computeDatesRef.GetValue();
        await ProcessGetDataAsync(computeDatesArray, fundKey, dataSourceName, destination);
        return computeDatesArray;
    });
}

private static async Task ProcessGetDataAsync(object[,] computeDatesArray, string fundKey, string dataSourceName, string destination)
{
    // Votre code asynchrone pour traiter les données en fonction de la matrice de dates, du FundKey et du dataSourceName
    // Utilisez les méthodes asynchrones et await lorsque cela est nécessaire
    // ...

    await Task.Delay(1000); // Exemple de délai asynchrone
}
